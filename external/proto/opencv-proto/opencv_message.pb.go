// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.0
// source: opencv_message.proto

package opencv_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FindTabBoxRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Image         []byte                 `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindTabBoxRequest) Reset() {
	*x = FindTabBoxRequest{}
	mi := &file_opencv_message_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindTabBoxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindTabBoxRequest) ProtoMessage() {}

func (x *FindTabBoxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opencv_message_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindTabBoxRequest.ProtoReflect.Descriptor instead.
func (*FindTabBoxRequest) Descriptor() ([]byte, []int) {
	return file_opencv_message_proto_rawDescGZIP(), []int{0}
}

func (x *FindTabBoxRequest) GetImage() []byte {
	if x != nil {
		return x.Image
	}
	return nil
}

type FindTabBoxResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Found         bool                   `protobuf:"varint,1,opt,name=found,proto3" json:"found,omitempty"`
	Box           *Box                   `protobuf:"bytes,2,opt,name=box,proto3" json:"box,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindTabBoxResponse) Reset() {
	*x = FindTabBoxResponse{}
	mi := &file_opencv_message_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindTabBoxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindTabBoxResponse) ProtoMessage() {}

func (x *FindTabBoxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_opencv_message_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindTabBoxResponse.ProtoReflect.Descriptor instead.
func (*FindTabBoxResponse) Descriptor() ([]byte, []int) {
	return file_opencv_message_proto_rawDescGZIP(), []int{1}
}

func (x *FindTabBoxResponse) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

func (x *FindTabBoxResponse) GetBox() *Box {
	if x != nil {
		return x.Box
	}
	return nil
}

type Box struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             int32                  `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y             int32                  `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	Width         int32                  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height        int32                  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Box) Reset() {
	*x = Box{}
	mi := &file_opencv_message_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Box) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Box) ProtoMessage() {}

func (x *Box) ProtoReflect() protoreflect.Message {
	mi := &file_opencv_message_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Box.ProtoReflect.Descriptor instead.
func (*Box) Descriptor() ([]byte, []int) {
	return file_opencv_message_proto_rawDescGZIP(), []int{2}
}

func (x *Box) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Box) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Box) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Box) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

var File_opencv_message_proto protoreflect.FileDescriptor

const file_opencv_message_proto_rawDesc = "" +
	"\n" +
	"\x14opencv_message.proto\x12\x0eopencv_service\")\n" +
	"\x11FindTabBoxRequest\x12\x14\n" +
	"\x05image\x18\x01 \x01(\fR\x05image\"Q\n" +
	"\x12FindTabBoxResponse\x12\x14\n" +
	"\x05found\x18\x01 \x01(\bR\x05found\x12%\n" +
	"\x03box\x18\x02 \x01(\v2\x13.opencv_service.BoxR\x03box\"O\n" +
	"\x03Box\x12\f\n" +
	"\x01x\x18\x01 \x01(\x05R\x01x\x12\f\n" +
	"\x01y\x18\x02 \x01(\x05R\x01y\x12\x14\n" +
	"\x05width\x18\x03 \x01(\x05R\x05width\x12\x16\n" +
	"\x06height\x18\x04 \x01(\x05R\x06heightB\x14Z\x12build/opencv-protob\x06proto3"

var (
	file_opencv_message_proto_rawDescOnce sync.Once
	file_opencv_message_proto_rawDescData []byte
)

func file_opencv_message_proto_rawDescGZIP() []byte {
	file_opencv_message_proto_rawDescOnce.Do(func() {
		file_opencv_message_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_opencv_message_proto_rawDesc), len(file_opencv_message_proto_rawDesc)))
	})
	return file_opencv_message_proto_rawDescData
}

var file_opencv_message_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_opencv_message_proto_goTypes = []any{
	(*FindTabBoxRequest)(nil),  // 0: opencv_service.FindTabBoxRequest
	(*FindTabBoxResponse)(nil), // 1: opencv_service.FindTabBoxResponse
	(*Box)(nil),                // 2: opencv_service.Box
}
var file_opencv_message_proto_depIdxs = []int32{
	2, // 0: opencv_service.FindTabBoxResponse.box:type_name -> opencv_service.Box
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_opencv_message_proto_init() }
func file_opencv_message_proto_init() {
	if File_opencv_message_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_opencv_message_proto_rawDesc), len(file_opencv_message_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_opencv_message_proto_goTypes,
		DependencyIndexes: file_opencv_message_proto_depIdxs,
		MessageInfos:      file_opencv_message_proto_msgTypes,
	}.Build()
	File_opencv_message_proto = out.File
	file_opencv_message_proto_goTypes = nil
	file_opencv_message_proto_depIdxs = nil
}
